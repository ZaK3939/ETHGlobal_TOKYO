/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../common";
import type {
  Semver,
  SemverInterface,
} from "../../../../../@eth-optimism/contracts-bedrock/contracts/universal/Semver";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_major",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_minor",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_patch",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506040516103e23803806103e283398101604081905261002f91610040565b60809290925260a05260c05261006e565b60008060006060848603121561005557600080fd5b8351925060208401519150604084015190509250925092565b60805160a05160c05161034861009a600039600060a701526000607e01526000605501526103486000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806354fd4d5014610030575b600080fd5b61003861004e565b6040516100459190610298565b60405180910390f35b60606100797f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100a27f00000000000000000000000000000000000000000000000000000000000000006100f1565b6100cb7f00000000000000000000000000000000000000000000000000000000000000006100f1565b6040516020016100dd939291906102cb565b604051602081830303815290604052905090565b606060006100fe83610191565b600101905060008167ffffffffffffffff81111561011e5761011e610325565b6040519080825280601f01601f191660200182016040528015610148576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461015257509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106101da577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef81000000008310610206576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061022457662386f26fc10000830492506010015b6305f5e100831061023c576305f5e100830492506008015b612710831061025057612710830492506004015b60648310610262576064830492506002015b600a831061026e576001015b92915050565b60005b8381101561028f578181015183820152602001610277565b50506000910152565b60208152600082518060208401526102b7816040850160208701610274565b601f01601f19169190910160400192915050565b600084516102dd818460208901610274565b8083019050601760f91b80825285516102fd816001850160208a01610274565b60019201918201528351610318816002840160208801610274565b0160020195945050505050565b634e487b7160e01b600052604160045260246000fdfea164736f6c6343000812000a";

type SemverConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SemverConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Semver__factory extends ContractFactory {
  constructor(...args: SemverConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _major: PromiseOrValue<BigNumberish>,
    _minor: PromiseOrValue<BigNumberish>,
    _patch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Semver> {
    return super.deploy(
      _major,
      _minor,
      _patch,
      overrides || {}
    ) as Promise<Semver>;
  }
  override getDeployTransaction(
    _major: PromiseOrValue<BigNumberish>,
    _minor: PromiseOrValue<BigNumberish>,
    _patch: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_major, _minor, _patch, overrides || {});
  }
  override attach(address: string): Semver {
    return super.attach(address) as Semver;
  }
  override connect(signer: Signer): Semver__factory {
    return super.connect(signer) as Semver__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SemverInterface {
    return new utils.Interface(_abi) as SemverInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Semver {
    return new Contract(address, _abi, signerOrProvider) as Semver;
  }
}
