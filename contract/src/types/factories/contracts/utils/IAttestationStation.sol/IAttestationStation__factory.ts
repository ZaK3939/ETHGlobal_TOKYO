/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  IAttestationStation,
  IAttestationStationInterface,
} from "../../../../contracts/utils/IAttestationStation.sol/IAttestationStation";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "about",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "AttestationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "about",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
        ],
        internalType: "struct IAttestationStation.AttestationData[]",
        name: "_attestations",
        type: "tuple[]",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061060e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806329b42cb51461003b5780635eb5ea1014610064575b600080fd5b61004e610049366004610216565b610079565b60405161005b9190610252565b60405180910390f35b610077610072366004610310565b610123565b005b60006020818152938152604080822085529281528281209093528252902080546100a29061047b565b80601f01602080910402602001604051908101604052809291908181526020018280546100ce9061047b565b801561011b5780601f106100f05761010080835404028352916020019161011b565b820191906000526020600020905b8154815290600101906020018083116100fe57829003601f168201915b505050505081565b60005b81518110156101f6576000828281518110610143576101436104b5565b60209081029190910181015160408082015133600090815280855282812084516001600160a01b03168252855282812084860151825290945292209092509061018c908261051a565b50806020015181600001516001600160a01b0316336001600160a01b03167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d8584604001516040516101dd9190610252565b60405180910390a4506101ef816105da565b9050610126565b5050565b80356001600160a01b038116811461021157600080fd5b919050565b60008060006060848603121561022b57600080fd5b610234846101fa565b9250610242602085016101fa565b9150604084013590509250925092565b600060208083528351808285015260005b8181101561027f57858101830151858201604001528201610263565b506000604082860101526040601f19601f8301168501019250505092915050565b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156102d9576102d96102a0565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610308576103086102a0565b604052919050565b6000602080838503121561032357600080fd5b823567ffffffffffffffff8082111561033b57600080fd5b818501915085601f83011261034f57600080fd5b813581811115610361576103616102a0565b8060051b6103708582016102df565b918252838101850191858101908984111561038a57600080fd5b86860192505b8383101561046e578235858111156103a85760008081fd5b86016060601f19828d0381018213156103c15760008081fd5b6103c96102b6565b6103d48b85016101fa565b81526040848101358c8301529284013592898411156103f35760008081fd5b83850194508e603f86011261040a57600093508384fd5b8b850135935089841115610420576104206102a0565b6104308c84601f870116016102df565b92508383528e818587010111156104475760008081fd5b838186018d85013760009383018c0193909352918201528352509186019190860190610390565b9998505050505050505050565b600181811c9082168061048f57607f821691505b6020821081036104af57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052603260045260246000fd5b601f82111561051557600081815260208120601f850160051c810160208610156104f25750805b601f850160051c820191505b81811015610511578281556001016104fe565b5050505b505050565b815167ffffffffffffffff811115610534576105346102a0565b61054881610542845461047b565b846104cb565b602080601f83116001811461057d57600084156105655750858301515b600019600386901b1c1916600185901b178555610511565b600085815260208120601f198616915b828110156105ac5788860151825594840194600190910190840161058d565b50858210156105ca5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6000600182016105fa57634e487b7160e01b600052601160045260246000fd5b506001019056fea164736f6c6343000812000a";

type IAttestationStationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IAttestationStationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IAttestationStation__factory extends ContractFactory {
  constructor(...args: IAttestationStationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IAttestationStation> {
    return super.deploy(overrides || {}) as Promise<IAttestationStation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IAttestationStation {
    return super.attach(address) as IAttestationStation;
  }
  override connect(signer: Signer): IAttestationStation__factory {
    return super.connect(signer) as IAttestationStation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IAttestationStationInterface {
    return new utils.Interface(_abi) as IAttestationStationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IAttestationStation {
    return new Contract(address, _abi, signerOrProvider) as IAttestationStation;
  }
}
