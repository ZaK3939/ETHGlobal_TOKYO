/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  AttestationStation,
  AttestationStationInterface,
} from "../../contracts/AttestationStation";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "creator",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "about",
        type: "address",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "key",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "val",
        type: "bytes",
      },
    ],
    name: "AttestationCreated",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "about",
            type: "address",
          },
          {
            internalType: "bytes32",
            name: "key",
            type: "bytes32",
          },
          {
            internalType: "bytes",
            name: "val",
            type: "bytes",
          },
        ],
        internalType: "struct AttestationStation.AttestationData[]",
        name: "_attestations",
        type: "tuple[]",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_about",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "_key",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "_val",
        type: "bytes",
      },
    ],
    name: "attest",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "attestations",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "version",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60e060405234801561001057600080fd5b506001608081905260a052600060c05260805160a05160c0516108f561004f60003960006101ad015260006101840152600061015b01526108f56000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806329b42cb51461005157806354fd4d501461007a5780635eb5ea1014610082578063702b9dee14610097575b600080fd5b61006461005f36600461047e565b6100aa565b604051610071919061050a565b60405180910390f35b610064610154565b610095610090366004610524565b6101f7565b005b6100956100a536600461063c565b61025a565b60006020818152938152604080822085529281528281209093528252902080546100d390610693565b80601f01602080910402602001604051908101604052809291908181526020018280546100ff90610693565b801561014c5780601f106101215761010080835404028352916020019161014c565b820191906000526020600020905b81548152906001019060200180831161012f57829003601f168201915b505050505081565b606061017f7f00000000000000000000000000000000000000000000000000000000000000006102df565b6101a87f00000000000000000000000000000000000000000000000000000000000000006102df565b6101d17f00000000000000000000000000000000000000000000000000000000000000006102df565b6040516020016101e3939291906106cd565b604051602081830303815290604052905090565b8060005b8181101561025457600084848381811061021757610217610727565b9050602002810190610229919061073d565b6102329061075d565b905061024b81600001518260200151836040015161025a565b506001016101fb565b50505050565b336000908152602081815260408083206001600160a01b03871684528252808320858452909152902061028d8282610828565b5081836001600160a01b0316336001600160a01b03167f28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85846040516102d2919061050a565b60405180910390a4505050565b606060006102ec8361037f565b600101905060008167ffffffffffffffff81111561030c5761030c610599565b6040519080825280601f01601f191660200182016040528015610336576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a850494508461034057509392505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f01000000000000000083106103c8577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef810000000083106103f4576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061041257662386f26fc10000830492506010015b6305f5e100831061042a576305f5e100830492506008015b612710831061043e57612710830492506004015b60648310610450576064830492506002015b600a831061045c576001015b92915050565b80356001600160a01b038116811461047957600080fd5b919050565b60008060006060848603121561049357600080fd5b61049c84610462565b92506104aa60208501610462565b9150604084013590509250925092565b60005b838110156104d55781810151838201526020016104bd565b50506000910152565b600081518084526104f68160208601602086016104ba565b601f01601f19169290920160200192915050565b60208152600061051d60208301846104de565b9392505050565b6000806020838503121561053757600080fd5b823567ffffffffffffffff8082111561054f57600080fd5b818501915085601f83011261056357600080fd5b81358181111561057257600080fd5b8660208260051b850101111561058757600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126105c057600080fd5b813567ffffffffffffffff808211156105db576105db610599565b604051601f8301601f19908116603f0116810190828211818310171561060357610603610599565b8160405283815286602085880101111561061c57600080fd5b836020870160208301376000602085830101528094505050505092915050565b60008060006060848603121561065157600080fd5b61065a84610462565b925060208401359150604084013567ffffffffffffffff81111561067d57600080fd5b610689868287016105af565b9150509250925092565b600181811c908216806106a757607f821691505b6020821081036106c757634e487b7160e01b600052602260045260246000fd5b50919050565b600084516106df8184602089016104ba565b8083019050601760f91b80825285516106ff816001850160208a016104ba565b6001920191820152835161071a8160028401602088016104ba565b0160020195945050505050565b634e487b7160e01b600052603260045260246000fd5b60008235605e1983360301811261075357600080fd5b9190910192915050565b60006060823603121561076f57600080fd5b6040516060810167ffffffffffffffff828210818311171561079357610793610599565b816040526107a085610462565b83526020850135602084015260408501359150808211156107c057600080fd5b506107cd368286016105af565b60408301525092915050565b601f82111561082357600081815260208120601f850160051c810160208610156108005750805b601f850160051c820191505b8181101561081f5782815560010161080c565b5050505b505050565b815167ffffffffffffffff81111561084257610842610599565b610856816108508454610693565b846107d9565b602080601f83116001811461088b57600084156108735750858301515b600019600386901b1c1916600185901b17855561081f565b600085815260208120601f198616915b828110156108ba5788860151825594840194600190910190840161089b565b50858210156108d85787850151600019600388901b60f8161c191681555b5050505050600190811b0190555056fea164736f6c6343000812000a";

type AttestationStationConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AttestationStationConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AttestationStation__factory extends ContractFactory {
  constructor(...args: AttestationStationConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AttestationStation> {
    return super.deploy(overrides || {}) as Promise<AttestationStation>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): AttestationStation {
    return super.attach(address) as AttestationStation;
  }
  override connect(signer: Signer): AttestationStation__factory {
    return super.connect(signer) as AttestationStation__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AttestationStationInterface {
    return new utils.Interface(_abi) as AttestationStationInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AttestationStation {
    return new Contract(address, _abi, signerOrProvider) as AttestationStation;
  }
}
